{"ast":null,"code":"var _jsxFileName = \"/Users/haroldxu/Desktop/sale_demo/client/src/components/utils/FileUpload.js\";\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport Axios from 'axios';\n\nfunction FileUpload(props) {\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append(\"file\", files[0]); // svae image we chose in the node server\n\n    Axios.post('/api/product/uploadImage', formData, config).then(response => {\n      if (response.data.success) {\n        setImages([...Images, response.data.image]);\n        props.refreshFunction([...Images, response.data.image]);\n      } else {\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: true,\n    maxSize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: '300px',\n      height: '240px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontsize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '350px',\n      height: '240px',\n      overflowX: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/haroldxu/Desktop/sale_demo/client/src/components/utils/FileUpload.js"],"names":["React","useState","Dropzone","Icon","Axios","FileUpload","props","Images","setImages","onDrop","files","formData","FormData","config","header","append","post","then","response","data","success","image","refreshFunction","alert","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontsize","overflowX"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AAAC,wBAAgB;AAAjB;AADG,KAAf;AAGAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,KAAK,CAAC,CAAD,CAA7B,EALsB,CAOtB;;AACAN,IAAAA,KAAK,CAACY,IAAN,CAAW,0BAAX,EAAuCL,QAAvC,EAAiDE,MAAjD,EACKI,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBZ,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYW,QAAQ,CAACC,IAAT,CAAcE,KAA1B,CAAD,CAAT;AACAf,QAAAA,KAAK,CAACgB,eAAN,CAAsB,CAAC,GAAGf,MAAJ,EAAYW,QAAQ,CAACC,IAAT,CAAcE,KAA1B,CAAtB;AACH,OAHD,MAGO;AACHE,QAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,KARL;AAWH,GAnBD;;AAqBA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAC,MAAV;AAAkBC,MAAAA,cAAc,EAAC;AAAjC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAEhB,MADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,OAAO,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,CAAC;AAAEiB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,kBACG;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,KAAK,EAAE,OADC;AACQC,MAAAA,MAAM,EAAE,OADhB;AACyBC,MAAAA,MAAM,EAAE,qBADjC;AAERN,MAAAA,OAAO,EAAE,MAFD;AAESO,MAAAA,UAAU,EAAE,QAFrB;AAE+BN,MAAAA,cAAc,EAAE;AAF/C;AAAZ,KAGQC,YAAY,EAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CANR,CADJ,eAmBI;AAAK,IAAA,KAAK,EAAE;AAAER,MAAAA,OAAO,EAAE,MAAX;AAAmBI,MAAAA,KAAK,EAAE,OAA1B;AAAmCC,MAAAA,MAAM,EAAE,OAA3C;AAAoDI,MAAAA,SAAS,EAAE;AAA/D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,OAAO,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAnBJ,CADJ;AA2BH;;AAED,eAAe5B,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport Dropzone from 'react-dropzone'\nimport { Icon } from 'antd'\nimport Axios from 'axios';\n\nfunction FileUpload(props) {\n\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: {'content-type': 'multipart/form-data'}\n        }\n        formData.append(\"file\", files[0])\n\n        // svae image we chose in the node server\n        Axios.post('/api/product/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    setImages([...Images, response.data.image])\n                    props.refreshFunction([...Images, response.data.image])\n                } else {\n                    alert('Failed to save the Image in Server')\n                }\n            })\n\n        \n    }\n\n    return (\n        <div style={{ display:'flex', justifyContent:'space-between'}}>\n            <Dropzone\n                onDrop={onDrop}\n                multiple\n                maxSize\n            >\n                {({ getRootProps, getInputProps}) => (\n                    <div style={{ \n                        width: '300px', height: '240px', border: '1px solid lightgray', \n                        display: 'flex', alignItems: 'center', justifyContent: 'center'}}\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                        <Icon type=\"plus\" style={{ fontsize: '3rem'}} />\n\n                    </div>\n                )}\n            </Dropzone>\n\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll'}}>\n                <div onClick>\n                    <img />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FileUpload\n"]},"metadata":{},"sourceType":"module"}