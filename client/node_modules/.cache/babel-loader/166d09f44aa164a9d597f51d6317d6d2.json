{"ast":null,"code":"var _jsxFileName = \"/Users/wwh/Desktop/vscode/SCGO/client/src/components/utils/CodeBox/CodeBox.js\";\nimport React, { Component } from \"react\";\nimport { textSelect, removeDefaultBehavior, isFunction } from \"./utils\";\nimport \"./index.css\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: new Array(props.length).fill(\"\"),\n      dom: new Array(props.length)\n    };\n  }\n\n  onChange(e, i) {\n    const value = e.target.value.trim();\n\n    if (isFunction(this.props.validator)) {\n      if (value !== \"\" && !this.props.validator(value, i)) {\n        textSelect(e.target);\n        return;\n      }\n    }\n\n    if (this.state.code[i] !== value && value) {\n      this.focusOn(i + 1);\n    }\n\n    const newCode = this.state.code.map(v => v);\n    newCode[i] = value;\n    this.setState({\n      code: newCode\n    });\n    textSelect(e.target);\n\n    if (value !== \"\") {\n      this.focusOn(i + 1);\n    }\n\n    if (isFunction(this.props.onChange)) {\n      if (newCode.every(v => v !== \"\")) {\n        e.target.blur();\n      }\n\n      this.props.onChange(newCode);\n    }\n  }\n\n  getPrevBox(i) {\n    return this.state.dom[i - 1];\n  }\n\n  getNextBox(i) {\n    return this.state.dom[i + 1];\n  }\n\n  focusOn(i) {\n    const element = this.state.dom[i];\n\n    if (element) {\n      element.focus();\n    }\n  }\n\n  onKeyDown(e, i) {\n    const inputElement = e.target;\n\n    switch (e.keyCode) {\n      case 8:\n        // 删除完之后，退回到上一个输入框\n        if (e.target.value === \"\") {\n          // 如果空的话，那么就退回到上一个输入框\n          removeDefaultBehavior(e);\n          this.focusOn(i - 1);\n        }\n\n        break;\n\n      case 37: // 左\n\n      case 38:\n        // 上\n        removeDefaultBehavior(e);\n\n        if (this.getPrevBox(i)) {\n          this.focusOn(i - 1);\n        } else {\n          this.focusOn(i);\n        }\n\n        break;\n\n      case 39: // 右\n\n      case 40:\n        // 下\n        removeDefaultBehavior(e);\n\n        if (this.getNextBox(i)) {\n          this.focusOn(i + 1);\n        } else {\n          this.focusOn(i);\n        }\n\n        break;\n\n      default:\n        // 不管你输入什么\n        // 都会聚焦文本\n        textSelect(inputElement);\n    }\n  }\n\n  componentDidCatch(error, info) {\n    console.error(error);\n  }\n\n  render() {\n    const codeBox = [];\n    this.state.dom = [];\n    const inputType = this.props.type || \"input\";\n\n    for (let i = 0; i < this.props.length; i++) {\n      codeBox.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: \"codebox-field-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: inputType,\n        maxLength: \"1\",\n        autoComplete: \"false\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"off\",\n        spellCheck: \"false\",\n        value: this.state.code[i],\n        ref: dom => this.state.dom[i] = dom,\n        onFocus: e => textSelect(e.target),\n        onClick: e => textSelect(e.target),\n        onChange: e => this.onChange(e, i),\n        onKeyDown: e => this.onKeyDown(e, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"codebox-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, codeBox));\n  }\n\n}","map":{"version":3,"sources":["/Users/wwh/Desktop/vscode/SCGO/client/src/components/utils/CodeBox/CodeBox.js"],"names":["React","Component","textSelect","removeDefaultBehavior","isFunction","constructor","props","state","code","Array","length","fill","dom","onChange","e","i","value","target","trim","validator","focusOn","newCode","map","v","setState","every","blur","getPrevBox","getNextBox","element","focus","onKeyDown","inputElement","keyCode","componentDidCatch","error","info","console","render","codeBox","inputType","type","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { textSelect, removeDefaultBehavior, isFunction } from \"./utils\";\nimport \"./index.css\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: new Array(props.length).fill(\"\"),\n      dom: new Array(props.length),\n    };\n  }\n  onChange(e, i) {\n    const value = e.target.value.trim();\n\n    if (isFunction(this.props.validator)) {\n      if (value !== \"\" && !this.props.validator(value, i)) {\n        textSelect(e.target);\n        return;\n      }\n    }\n\n    if (this.state.code[i] !== value && value) {\n      this.focusOn(i + 1);\n    }\n\n    const newCode = this.state.code.map((v) => v);\n    newCode[i] = value;\n    this.setState({ code: newCode });\n    textSelect(e.target);\n    if (value !== \"\") {\n      this.focusOn(i + 1);\n    }\n    if (isFunction(this.props.onChange)) {\n      if (newCode.every((v) => v !== \"\")) {\n        e.target.blur();\n      }\n      this.props.onChange(newCode);\n    }\n  }\n  getPrevBox(i) {\n    return this.state.dom[i - 1];\n  }\n  getNextBox(i) {\n    return this.state.dom[i + 1];\n  }\n  focusOn(i) {\n    const element = this.state.dom[i];\n    if (element) {\n      element.focus();\n    }\n  }\n  onKeyDown(e, i) {\n    const inputElement = e.target;\n    switch (e.keyCode) {\n      case 8: // 删除完之后，退回到上一个输入框\n        if (e.target.value === \"\") {\n          // 如果空的话，那么就退回到上一个输入框\n          removeDefaultBehavior(e);\n          this.focusOn(i - 1);\n        }\n        break;\n      case 37: // 左\n      case 38: // 上\n        removeDefaultBehavior(e);\n        if (this.getPrevBox(i)) {\n          this.focusOn(i - 1);\n        } else {\n          this.focusOn(i);\n        }\n        break;\n      case 39: // 右\n      case 40: // 下\n        removeDefaultBehavior(e);\n        if (this.getNextBox(i)) {\n          this.focusOn(i + 1);\n        } else {\n          this.focusOn(i);\n        }\n        break;\n      default:\n        // 不管你输入什么\n        // 都会聚焦文本\n        textSelect(inputElement);\n    }\n  }\n  componentDidCatch(error, info) {\n    console.error(error);\n  }\n  render() {\n    const codeBox = [];\n    this.state.dom = [];\n    const inputType = this.props.type || \"input\";\n    for (let i = 0; i < this.props.length; i++) {\n      codeBox.push(\n        <div key={i} className=\"codebox-field-wrap\">\n          <input\n            type={inputType}\n            maxLength=\"1\"\n            autoComplete=\"false\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            spellCheck=\"false\"\n            value={this.state.code[i]}\n            ref={(dom) => (this.state.dom[i] = dom)}\n            onFocus={(e) => textSelect(e.target)}\n            onClick={(e) => textSelect(e.target)}\n            onChange={(e) => this.onChange(e, i)}\n            onKeyDown={(e) => this.onKeyDown(e, i)}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"codebox-container\">\n        <div>{codeBox}</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}