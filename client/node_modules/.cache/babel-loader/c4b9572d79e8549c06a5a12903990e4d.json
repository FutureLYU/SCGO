{"ast":null,"code":"var _jsxFileName = \"/Users/haroldxu/Desktop/sale_demo/client/src/components/views/LandingPage/Sections/CheckBox.js\";\nimport React, { useState } from 'react';\nimport { Checkbox, Collapse } from \"antd\";\nconst {\n  Panel\n} = Collapse;\nconst continents = [{\n  \"_id\": 1,\n  \"name\": \"Africa\"\n}, {\n  \"_id\": 2,\n  \"name\": \"Europe\"\n}, {\n  \"_id\": 3,\n  \"name\": \"Asia\"\n}, {\n  \"_id\": 4,\n  \"name\": \"North America\"\n}, {\n  \"_id\": 5,\n  \"name\": \"South America\"\n}, {\n  \"_id\": 6,\n  \"name\": \"Australia\"\n}, {\n  \"_id\": 7,\n  \"name\": \"Antarctica\"\n}];\n\nfunction CheckBox(props) {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked); // update this checked information into parent components\n  };\n\n  const renderCheckboxLists = () => continents.map((value, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: () => handleToggle(value._id),\n    type: \"checkbox\",\n    checked: Checked.indexOf(value._id) === -1 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, value.name)));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: ['0'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Continents\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, renderCheckboxLists())));\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/haroldxu/Desktop/sale_demo/client/src/components/views/LandingPage/Sections/CheckBox.js"],"names":["React","useState","Checkbox","Collapse","Panel","continents","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleFilters","renderCheckboxLists","map","index","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,QAAlB;AAEA,MAAME,UAAU,GAAG,CACf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CADe,EAKf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CALe,EASf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CATe,EAaf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CAbe,EAiBf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CAjBe,EAqBf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CArBe,EAyBf;AACI,SAAO,CADX;AAEI,UAAQ;AAFZ,CAzBe,CAAnB;;AA+BA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAE5B,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACH,KAFD,MAEO;AACHG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACAP,IAAAA,KAAK,CAACU,aAAN,CAAoBH,UAApB,EAZ4B,CAa5B;AACH,GAdD;;AAgBA,QAAMI,mBAAmB,GAAG,MAAMb,UAAU,CAACc,GAAX,CAAe,CAACR,KAAD,EAAQS,KAAR,kBAC7C,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAE,MAAMV,YAAY,CAACC,KAAK,CAACU,GAAP,CADhC;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,OAAO,EAAEb,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACU,GAAtB,MAA+B,CAAC,CAAhC,GAAoC,KAApC,GAA0C,IAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,KAAK,CAACW,IAAb,CANJ,CAD8B,CAAlC;;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,YAAd;AAA2B,IAAA,GAAG,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,mBAAmB,EADxB,CADJ,CADJ,CADJ;AASH;;AAED,eAAeZ,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Checkbox, Collapse } from \"antd\";\n\nconst { Panel } = Collapse\n\nconst continents = [\n    {\n        \"_id\": 1,\n        \"name\": \"Africa\"\n    },\n    {\n        \"_id\": 2,\n        \"name\": \"Europe\"\n    },\n    {\n        \"_id\": 3,\n        \"name\": \"Asia\"\n    },\n    {\n        \"_id\": 4,\n        \"name\": \"North America\"\n    },\n    {\n        \"_id\": 5,\n        \"name\": \"South America\"\n    },\n    {\n        \"_id\": 6,\n        \"name\": \"Australia\"\n    },\n    {\n        \"_id\": 7,\n        \"name\": \"Antarctica\"\n    },\n]\n\nfunction CheckBox(props) {\n\n    const [Checked, setChecked] = useState([])\n\n    const handleToggle = (value) => {\n\n        const currentIndex = Checked.indexOf(value)\n        const newChecked = [...Checked]\n\n        if (currentIndex === -1) {\n            newChecked.push(value)\n        } else {\n            newChecked.splice(currentIndex, 1)\n        }\n        \n        setChecked(newChecked)\n        props.handleFilters(newChecked)\n        // update this checked information into parent components\n    }\n\n    const renderCheckboxLists = () => continents.map((value, index) => (\n        <React.Fragment key={index}>\n            <Checkbox \n                onChange={() => handleToggle(value._id)}\n                type=\"checkbox\"\n                checked={Checked.indexOf(value._id) === -1 ? false:true}\n            /> \n            <span>{value.name}</span>\n        </React.Fragment>\n    ))\n\n    return (\n        <div>\n            <Collapse defaultActiveKey={['0']}>\n                <Panel header=\"Continents\" key='1'>\n                    {renderCheckboxLists()}\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\n\nexport default CheckBox\n"]},"metadata":{},"sourceType":"module"}